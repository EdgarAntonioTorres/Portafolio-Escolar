/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tecmilenio.retos;

/**
 *
 * @author edgar
 */
import java.util.Scanner;
public class Reto6 {
public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Crear una instancia de la nómina de la empresa
        NominaEmpresa nomina = new NominaEmpresa();
        
        System.out.println("---- Reporte de nómina ----");
        // Obtener el número de empleados a agregar
        int numEmpleados;
            do {
                System.out.println("Ingrese el número de empleados:");
                numEmpleados = scanner.nextInt();
                scanner.nextLine();
                if (numEmpleados <= 0) {
                System.out.println("Por favor, ingrese un número válido (mayor que cero).");
                }
            } while (numEmpleados <= 0);

        // Solicitar los datos de cada empleado
        for (int i = 0; i < numEmpleados; i++) {
            System.out.println("\nEmpleado " + (i + 1) + ":");
            System.out.println("Ingrese el nombre del empleado:");
            String nombre = scanner.nextLine();
            System.out.println("Ingrese la categoría del empleado (Ventas/Administrador/Gerente):");
            String categoria = scanner.nextLine();
            System.out.println("Ingrese las horas trabajadas:");
            int horasTrabajadas = scanner.nextInt();
            System.out.println("Ingrese las horas extras:");
            int horasExtras = scanner.nextInt();
            scanner.nextLine();
            
            // Crear una instancia de CategoriaEmpleado según la categoría ingresada
            CategoriaEmpleado categoriaEmpleado;
            switch (categoria.toLowerCase()) {
                case "ventas":
                    categoriaEmpleado = new CategoriaEmpleado("Empleado de Ventas", "VEN", 100.0, 50.0);
                    break;
                case "administrador":
                    categoriaEmpleado = new CategoriaEmpleado("Administrador", "ADM", 180.0, 100.0);
                    break;
                case "gerente":
                    categoriaEmpleado = new CategoriaEmpleado("Gerente", "GER", 250.0, 150.0);
                    break;
                default:
                    System.out.println("Categoría no válida. Se asignará la categoría 'Otro'.");
                    categoriaEmpleado = new CategoriaEmpleado("Otro", "OTR", 0.0, 0.0);
            }

            // Crear una instancia de empleado con los datos ingresados
            Empleado empleado = new Empleado(nombre, horasTrabajadas, horasExtras, categoriaEmpleado);

            // Agregar el empleado a la nómina
            nomina.agregarEmpleado(empleado);
        }

        // Mostrar los datos de los empleados y el resumen de la nómina
        System.out.println("\nCantidad de empleados: " + nomina.contarEmpleadosConHorasExtras());
        System.out.println("Datos de los empleados:");

        for (int i = 0; i < nomina.getEmpleados().size(); i++) {
            Empleado empleado = nomina.getEmpleados().get(i);
            System.out.println("Empleado " + (i + 1) + ":");
            System.out.println("Nombre: " + empleado.getNombreCompleto());
            System.out.println("Categoría: " + empleado.getCategoria().getNombreCategoria());
            System.out.println("Sueldo base: $" + empleado.getCategoria().getSueldoBase());
            System.out.println("Horas trabajadas: " + empleado.getHorasTrabajadas());
            System.out.println("Horas extras: " + empleado.getHorasExtrasTrabajadas());
            System.out.println("Pago neto: $" + empleado.calcularSalario());
            System.out.println();
        }

        // Mostrar el resumen de la nómina
        System.out.println("Pago total nómina: $" + nomina.calcularTotalNomina());
        System.out.println("Pago total horas trabajadas: $" + nomina.calcularTotalSueldoNormal());
        System.out.println("Pago total horas extras: $" + nomina.calcularTotalHorasExtras());
        System.out.println("Total de horas laboradas: " + nomina.calcularTotalHorasLaboradas() + " horas");
        System.out.println("Total de empleados con horas extras: " + nomina.contarEmpleadosConHorasExtras());
        System.out.println("Total de empleados sin horas extras: " + nomina.contarEmpleadosSinHorasExtras());
        System.out.println("Total de horas extras laboradas: " + nomina.calcularTotalHorasExtras() + " horas");
        System.out.println("---- Fin del programa v1.1 ----");
        scanner.close();
    }
}